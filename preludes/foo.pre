letrec
    append = fun x1 x2:
        if empty x1 then x2
            else
        if empty rest x1 then 1st x1 : x2
            else
        1st x1 : append(rest x1, x2),

    filter = fun f x:
        if empty x then nil
            else
        if f(1st x) then 1st x : filter(f, rest x)
            else
        filter(f, rest x),

    even = fun n:
        if n < 0 then even(- n)
            else
        if n = 0 then 1
            else
        odd(n - 1),

    odd = fun n:
        if n < 0 then odd(- n)
            else
        if n = 0 then 0
            else
        even(n - 1),

    L = [1,2,3,4,5,6,7,8,9,10]
in
    append(filter(odd,L), filter(even,L))
